@using OrderFlow.ViewModels.Notification
@model CreateNotificationViewModel;
@{
    ViewData["Title"] = "Edit Notification";
    var id = Context.Request.RouteValues["id"]?.ToString() ?? ""; 
}

<div class="row justify-content-center">
    <div class="col-md-7">
        <div class="card shadow-lg mt-5">
            <div class="card-header bg-primary text-white">
                <h3 class="mb-0"><i class="fas fa-bell me-2"></i> @ViewData["Title"] @(!string.IsNullOrEmpty(id) ? $" - {id}" : "")</h3>
            </div>
            <div class="card-body">
                <form asp-area="Admin" asp-controller="Notification" asp-action="Edit" asp-route-id="@id" method="post">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <div class="mb-3">
                        <label asp-for="Title" class="form-label"></label>
                        <input asp-for="Title" class="form-control" placeholder="e.g., Order Status Update" />
                        <span asp-validation-for="Title" class="text-danger mt-1 d-block"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Message" class="form-label"></label>
                        <textarea asp-for="Message" class="form-control" rows="4" placeholder="Enter the notification message..."></textarea>
                        <span asp-validation-for="Message" class="text-danger mt-1 d-block"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ReceiverId" class="form-label">Receiver</label>
                        <select asp-for="ReceiverId" class="form-select">
                            <option value="">-- Select Receiver --</option>
                            @if (Model.Receivers != null)
                            {
                                foreach (var receiver in Model.Receivers)
                                {
                                    <option value="@receiver.Key">@receiver.Value</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="ReceiverId" class="text-danger mt-1 d-block"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="OrderId" class="form-label">Associated Order (Optional)</label>
                        <select asp-for="OrderId" class="form-select">
                            <option value="">-- Select Order --</option>
                            @if (Model.Orders != null)
                            {
                                foreach (var order in Model.Orders)
                                {
                                    <option value="@order.Key">@order.Value</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="OrderId" class="text-danger mt-1 d-block"></span>
                    </div>

                    <hr />

                    <div class="d-flex justify-content-between align-items-center">
                        <a asp-area="Admin" asp-action="Index" asp-controller="Notification" class="btn btn-secondary btn-lg">
                            <i class="fas fa-arrow-left me-2"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-save me-2"></i> Save Notification
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}