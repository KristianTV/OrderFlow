@using OrderFlow.ViewModels.Order
@model DetailsOrderViewModel;
@{
    ViewData["Title"] = "Order Details";
}

<div class="container mt-5">
    <h2 class="mb-4 text-center">@ViewData["Title"] - <span class="text-primary">@Model.OrderID</span></h2>
    <div class="row">
        <div class="col-md-7">
            <div class="card shadow-lg mb-4 border-primary">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"><i class="fas fa-info-circle me-2"></i> Order Information</h4>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Order ID:</div>
                        <div class="col-sm-8"><strong>@Model.OrderID</strong></div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">User:</div>
                        <div class="col-sm-8">@Model.UserName</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Order Date:</div>
                        <div class="col-sm-8"><i class="far fa-calendar-alt me-1"></i> @Model.OrderDate.ToString("yyyy-MM-dd HH:mm")</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Delivery Date:</div>
                        <div class="col-sm-8"><i class="far fa-calendar-check me-1"></i> @(Model.DeliveryDate?.ToString("yyyy-MM-dd HH:mm") ?? "N/A")</div>
                    </div>
                    <hr />
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Pickup Address:</div>
                        <div class="col-sm-8"><i class="fas fa-map-marker-alt me-1"></i> @Model.PickupAddress</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Delivery Address:</div>
                        <div class="col-sm-8"><i class="fas fa-truck-loading me-1"></i> @Model.DeliveryAddress</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Load Capacity:</div>
                        <div class="col-sm-8"><strong>@Model.LoadCapacity</strong></div>
                    </div>

                    @if (!string.IsNullOrWhiteSpace(Model.DeliveryInstructions))
                    {
                        <div class="row mb-2">
                            <div class="col-sm-4 text-muted">Instructions:</div>
                            <div class="col-sm-8">@Model.DeliveryInstructions</div>
                        </div>
                    }
                    <hr />
                    <div class="row mb-2">
                        <div class="col-sm-4 text-muted">Status:</div>
                        <div class="col-sm-8">
                            <span class="badge @GetStatusBadgeClass(Model.Status) fs-6">
                                @Model.Status
                            </span>
                        </div>
                    </div>
                    @if (Model.isCanceled)
                    {
                        <div class="row mb-2">
                            <div class="col-sm-12">
                                <p class="text-danger fw-bold"><i class="fas fa-times-circle me-1"></i> This order is canceled.</p>
                            </div>
                        </div>
                    }


                    @if (Model.TrucksLicensePlates.Any())
                    {
                        <div class="row mb-2">
                            <div class="col-sm-4 text-muted">Trucks Assigned:</div>
                            @foreach (var truckLicensePlate in Model.TrucksLicensePlates)
                            {

                                <div class="col-sm-8"><strong>@truckLicensePlate</strong></div>

                            }
                        </div>
                    }
                    else
                    {
                        <div class="row mb-2">
                            <div class="col-sm-12">
                                <p class="text-muted fst-italic">No truck assigned yet.</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow-lg mb-3">
                <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-dollar-sign me-2"></i> Payments</h5>
                </div>
                <div class="card-body">
                    @if (Model.Payments != null && Model.Payments.Any())
                    {
                        <ul class="list-group mb-3">
                            @foreach (var payment in Model.Payments)
                            {
                                <li class="list-group-item flex justify-between items-center py-3 px-4 border-b border-gray-200 last:border-b-0">
                                    <div class="flex flex-col text-left">
                                        <div class="flex items-center">
                                            <strong class="text-gray-900 text-base">@payment.PaymentDate.ToString("yyyy-MM-dd HH:mm")</strong>
                                            <span class="badge bg-primary rounded-pill ms-2">@payment.Amount.ToString("C")</span>
                                        </div>
                                        @if (!string.IsNullOrEmpty(payment.PaymentDescription))
                                        {
                                            <p class="mt-1 text-gray-600 text-sm">@payment.PaymentDescription</p>
                                        }
                                    </div>
                                </li>

                            }
                        </ul>
                        <h4 class="text-end mt-4">Total Paid: <span class="text-success fw-bold">@Model.TotalPrice.ToString("C")</span></h4>
                    }
                    else
                    {
                        <p class="text-muted text-center mb-0">No payments found.</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <a class="btn btn-secondary btn-lg" asp-area="" asp-controller="Order" asp-action="Index">
            <i class="fas fa-arrow-left me-2"></i> Back to Orders
        </a>
        <div>
            <a class="btn btn-primary btn-lg me-2" asp-area="" asp-controller="Order" asp-action="Edit" asp-route-id="@Model.OrderID">
                <i class="fas fa-edit me-2"></i> Edit Order
            </a>

            @if (!Model.isCanceled)
            {
                <button type="button" class="btn btn-danger btn-lg" data-bs-toggle="modal" data-bs-target="#confirmCancelModal">
                    <i class="fas fa-times-circle me-2"></i> Cancel Order
                </button>
            }
        </div>
    </div>

    <div class="modal fade" id="confirmCancelModal" tabindex="-1" aria-labelledby="confirmCancelModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-danger shadow-lg rounded-lg">
                <div class="modal-header bg-danger text-white p-3 rounded-t-lg">
                    <h5 class="modal-title fs-5" id="confirmCancelModalLabel">
                        <i class="fas fa-times-circle me-2"></i> Confirm Order Cancellation
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4 text-center">
                    <div class="mb-3">
                        <i class="fas fa-exclamation-circle text-danger fa-3x"></i>
                    </div>
                    <p class="lead text-gray-700">
                        Are you sure you want to cancel this order?
                    </p>
                    <p class="text-muted text-sm">
                        This action cannot be undone.
                    </p>
                    <p class="text-muted text-sm mt-2">
                        Order ID: <strong>@Model.OrderID</strong>
                    </p>
                </div>
                <div class="modal-footer d-flex justify-content-center p-3">
                    <button type="button" class="btn btn-secondary px-4 py-2 rounded-md" data-bs-dismiss="modal">
                        <i class="fas fa-check me-2"></i> No, Keep Order
                    </button>
                    <form method="post" asp-area="" asp-controller="Order" asp-action="Cancel" asp-route-id="@Model.OrderID" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger px-4 py-2 rounded-md">
                            <i class="fas fa-ban me-2"></i> Yes, Cancel Order
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</div>

@functions {
    private string GetStatusBadgeClass(string status) => status switch
    {
        "Pending" => "bg-warning",
        "InProgress" => "bg-primary",
        "Completed" => "bg-success",
        "Cancelled" => "bg-danger",
        "OnHold" => "bg-secondary",
        "Failed" => "bg-danger",
        "Delayed" => "bg-danger",
        _ => "bg-light text-dark"
    };
}
